[{"title":"Using Machine Learning Library on NodeJS","date":"2023-06-29T00:00:00.000Z","tags":["Machine Learning","NodeJS","Javascript"],"draft":false,"type":"Blog","readingTime":{"text":"7 min read","minutes":6.28,"time":376800,"words":1256},"slug":"using-machine-learing-library","path":"blog/using-machine-learing-library","filePath":"blog/using-machine-learing-library.mdx","toc":[{"value":"[NodeJS] 내 Youtube 채널을 위한 음악 생성 프로젝트 (Start)","url":"#nodejs-내-youtube-채널을-위한-음악-생성-프로젝트-start","depth":1},{"value":"server 디렉토리에서 npm run start # client 디렉토리에서 npm run dev","url":"#server-디렉토리에서-npm-run-start--client-디렉토리에서-npm-run-dev","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Using Machine Learning Library on NodeJS","datePublished":"2023-06-29T00:00:00.000Z","dateModified":"2023-06-29T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/using-machine-learing-library"}},{"title":"Measuring and improving front-end performance","date":"2023-05-15T00:00:00.000Z","tags":["FE","Javascript","React","Performance"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.295,"time":257700,"words":859},"slug":"frontend-performance","path":"blog/frontend-performance","filePath":"blog/frontend-performance.mdx","toc":[{"value":"[Study] Front Performance 측정 및 개선","url":"#study-front-performance-측정-및-개선","depth":1},{"value":"성능 측정","url":"#성능-측정","depth":2},{"value":"메모리 사용량 1GB 일 때 총 사용 비율","url":"#메모리-사용량-1gb-일-때-총-사용-비율","depth":2},{"value":"성능 개선","url":"#성능-개선","depth":2},{"value":"1) (임시) Node.js에 할당 된 가상 메모리양 늘리기","url":"#1-임시-nodejs에-할당-된-가상-메모리양-늘리기","depth":3},{"value":"2) useEffect hook 사용시 clean up 함수 적용","url":"#2-useeffect-hook-사용시-clean-up-함수-적용","depth":3},{"value":"3) SSR(서버사이드 렌더링) 관련","url":"#3-ssr서버사이드-렌더링-관련","depth":3},{"value":"참고","url":"#참고","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Measuring and improving front-end performance","datePublished":"2023-05-15T00:00:00.000Z","dateModified":"2023-05-15T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/frontend-performance"}},{"title":"Reducing Project Build Size","date":"2023-05-15T00:00:00.000Z","tags":["FE","Performance","React"],"draft":false,"type":"Blog","readingTime":{"text":"1 min read","minutes":0.905,"time":54300,"words":181},"slug":"project-build-size","path":"blog/project-build-size","filePath":"blog/project-build-size.mdx","toc":[{"value":"[Study] 프로젝트 빌드 사이즈 줄이기","url":"#study-프로젝트-빌드-사이즈-줄이기","depth":1},{"value":"2) Dynamic Import (동적 임포트)","url":"#2-dynamic-import-동적-임포트","depth":3},{"value":"결과","url":"#결과","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Reducing Project Build Size","datePublished":"2023-05-15T00:00:00.000Z","dateModified":"2023-05-15T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/project-build-size"}},{"title":"React State & Recoil","date":"2023-01-24T00:00:00.000Z","tags":["FE","React","Javascript","State"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.595,"time":275700,"words":919},"slug":"react-state-recoil","path":"blog/react-state-recoil","filePath":"blog/react-state-recoil.mdx","toc":[{"value":"[Study] React State & Recoil (1)","url":"#study-react-state--recoil-1","depth":1},{"value":"Redux VS Recoil Github Sample","url":"#redux-vs-recoil-github-sample","depth":2},{"value":"Atoms","url":"#atoms","depth":2},{"value":"Selector","url":"#selector","depth":2},{"value":"실제 API 적용","url":"#실제-api-적용","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"React State & Recoil","datePublished":"2023-01-24T00:00:00.000Z","dateModified":"2023-01-24T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/react-state-recoil"}},{"title":"React State & Recoil","date":"2023-01-24T00:00:00.000Z","tags":["React","State","FE","Recoil"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.605,"time":276300,"words":921},"slug":"study-react-state-recoil-1","path":"blog/study-react-state-recoil-1","filePath":"blog/study-react-state-recoil-1.mdx","toc":[{"value":"[Study] React State & Recoil (1)","url":"#study-react-state--recoil-1","depth":1},{"value":"Redux VS Recoil Github Sample","url":"#redux-vs-recoil-github-sample","depth":2},{"value":"Atoms","url":"#atoms","depth":2},{"value":"Selector","url":"#selector","depth":2},{"value":"실제 API 적용","url":"#실제-api-적용","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"React State & Recoil","datePublished":"2023-01-24T00:00:00.000Z","dateModified":"2023-01-24T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/study-react-state-recoil-1"}},{"title":"Memo of React Official Documents (2)","date":"2023-01-06T00:00:00.000Z","tags":["FE","Javascript","React","State"],"draft":false,"type":"Blog","readingTime":{"text":"11 min read","minutes":10.445,"time":626700,"words":2089},"slug":"react-official-docs-memo2","path":"blog/react-official-docs-memo2","filePath":"blog/react-official-docs-memo2.mdx","toc":[{"value":"[React] Official Docs memo 2","url":"#react-official-docs-memo-2","depth":1},{"value":"1. Mock-Up (JSON 등)으로 시작","url":"#1-mock-up-json-등으로-시작","depth":3},{"value":"2. 화면을 UI 컴포넌트로 구성할 때","url":"#2-화면을-ui-컴포넌트로-구성할-때","depth":3},{"value":"3. Props & State 판단","url":"#3-props--state-판단","depth":3},{"value":"4. 애플리케이션이 가지는 각각의 state에 대해","url":"#4-애플리케이션이-가지는-각각의-state에-대해","depth":3},{"value":"5. Result","url":"#5-result","depth":3},{"value":"setState()","url":"#setstate","depth":3},{"value":"initialState","url":"#initialstate","depth":3},{"value":"Hook","url":"#hook","depth":3},{"value":"useEffect Hook","url":"#useeffect-hook","depth":3},{"value":"정리(clean-up)를 이용하는 Effects hook","url":"#정리clean-up를-이용하는-effects-hook","depth":3},{"value":"Tip) Effect 내 로직이 많이 필요한 경우, 구분을 위해서 useEffect를 여러번 구분해서 호출","url":"#tip-effect-내-로직이-많이-필요한-경우-구분을-위해서-useeffect를-여러번-구분해서-호출","depth":3},{"value":"Tip) Effect를 건너뛰어 성능 최적화","url":"#tip-effect를-건너뛰어-성능-최적화","depth":3},{"value":"Tip) Hook Linter Plugin","url":"#tip-hook-linter-plugin","depth":3},{"value":"반복문, 조건문 혹은 중첩된 함수 내에서 Hook을 호출하지 말 것","url":"#반복문-조건문-혹은-중첩된-함수-내에서-hook을-호출하지-말-것","depth":3},{"value":"useReducer","url":"#usereducer","depth":2},{"value":"useMemo","url":"#usememo","depth":2},{"value":"useImperativeHandle","url":"#useimperativehandle","depth":2},{"value":"useLayoutEffect","url":"#uselayouteffect","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Memo of React Official Documents (2)","datePublished":"2023-01-06T00:00:00.000Z","dateModified":"2023-01-06T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/react-official-docs-memo2"}},{"title":"Memo of React Official Documents","date":"2023-01-04T00:00:00.000Z","tags":["FE","Javascript","React","State"],"draft":false,"type":"Blog","readingTime":{"text":"6 min read","minutes":5.14,"time":308400,"words":1028},"slug":"react-official-docs","path":"blog/react-official-docs","filePath":"blog/react-official-docs.mdx","toc":[{"value":"[React] Official Docs memo","url":"#react-official-docs-memo","depth":1},{"value":"LifeCylce 참고","url":"#lifecylce-참고","depth":3},{"value":"setState()을 다룰 때 유의 사항: 직접 State를 수정하지 말 것","url":"#setstate을-다룰-때-유의-사항-직접-state를-수정하지-말-것","depth":3},{"value":"useState는 useReducer를 기본으로 만들어졌다","url":"#usestate는-usereducer를-기본으로-만들어졌다","depth":3},{"value":"Event Handler","url":"#event-handler","depth":3},{"value":"컴포넌트 내 인라인 표현식","url":"#컴포넌트-내-인라인-표현식","depth":3},{"value":"합성과 상속","url":"#합성과-상속","depth":3},{"value":"UI 컴포넌트의 상속은 사용하지 않는 것을 권장(import)","url":"#ui-컴포넌트의-상속은-사용하지-않는-것을-권장import","depth":3},{"value":"조금 더 봐야함","url":"#조금-더-봐야함","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Memo of React Official Documents","datePublished":"2023-01-04T00:00:00.000Z","dateModified":"2023-01-04T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/react-official-docs"}},{"title":"Using Array.prototype.reduce()","date":"2022-12-12T00:00:00.000Z","tags":["FE","Javascript"],"draft":false,"type":"Blog","readingTime":{"text":"2 min read","minutes":1.805,"time":108300,"words":361},"slug":"using-reduce","path":"blog/using-reduce","filePath":"blog/using-reduce.mdx","toc":[{"value":"Using Array.prototype.reduce()","url":"#using-arrayprototypereduce","depth":1},{"value":"예제","url":"#예제","depth":3},{"value":"사용시 주의점","url":"#사용시-주의점","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Using Array.prototype.reduce()","datePublished":"2022-12-12T00:00:00.000Z","dateModified":"2022-12-12T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/using-reduce"}},{"title":"AWS DevOps Session (Code Series)","date":"2022-10-15T00:00:00.000Z","tags":["CI/CD","DevOps","Deploy","AWS"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.21,"time":252600,"words":842},"slug":"aws-devops-session","path":"blog/aws-devops-session","filePath":"blog/aws-devops-session.mdx","toc":[{"value":"[#CI/CD] AWS DevOps Session (Code Series)","url":"#cicd-aws-devops-session-code-series","depth":1},{"value":"CI/CD","url":"#cicd","depth":2},{"value":"CI/CD 필요성","url":"#cicd-필요성","depth":3},{"value":"CI/CD 효과","url":"#cicd-효과","depth":3},{"value":"Amazon CI/CD Tool : Code Series","url":"#amazon-cicd-tool--code-series","depth":2},{"value":"AWS CodePipeline Service","url":"#aws-codepipeline-service","depth":3},{"value":"AWS CodeBuild 의 컨셉","url":"#aws-codebuild-의-컨셉","depth":3},{"value":"AWS CI/CD 환경 구성 방법","url":"#aws-cicd-환경-구성-방법","depth":3},{"value":"그 외 개념 참고","url":"#그-외-개념-참고","depth":2},{"value":"AWS IaC","url":"#aws-iac","depth":3},{"value":"AWS CDK","url":"#aws-cdk","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"AWS DevOps Session (Code Series)","datePublished":"2022-10-15T00:00:00.000Z","dateModified":"2022-10-15T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/aws-devops-session"}},{"title":"UI & Web Standard","date":"2022-10-15T00:00:00.000Z","tags":["UI","Web Standard","FE"],"draft":false,"type":"Blog","readingTime":{"text":"4 min read","minutes":3.74,"time":224400,"words":748},"slug":"ui-web-standard","path":"blog/ui-web-standard","filePath":"blog/ui-web-standard.mdx","toc":[{"value":"[#UI] Web Standards","url":"#ui-web-standards","depth":1},{"value":"구조","url":"#구조","depth":2},{"value":"표현","url":"#표현","depth":2},{"value":"동적 제어 언어","url":"#동적-제어-언어","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"UI & Web Standard","datePublished":"2022-10-15T00:00:00.000Z","dateModified":"2022-10-15T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/ui-web-standard"}},{"title":"About Back-Office Projects(Productivity etc)","date":"2022-10-11T00:00:00.000Z","tags":["FE"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.565,"time":273900,"words":913},"slug":"about-backoffice-system","path":"blog/about-backoffice-system","filePath":"blog/about-backoffice-system.mdx","toc":[{"value":"[#Memo] Back-Office System","url":"#memo-back-office-system","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"About Back-Office Projects(Productivity etc)","datePublished":"2022-10-11T00:00:00.000Z","dateModified":"2022-10-11T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/about-backoffice-system"}},{"title":"DFS (2) Visitor Check (Study/Data Structure)","date":"2022-10-06T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"4 min read","minutes":3.595,"time":215700,"words":719},"slug":"dfs-visitor-check-team-study","path":"blog/dfs-visitor-check-team-study","filePath":"blog/dfs-visitor-check-team-study.mdx","toc":[{"value":"[#TeamStudy] DFS(2) 방문자 체크","url":"#teamstudy-dfs2-방문자-체크","depth":1},{"value":"방문자 체크","url":"#방문자-체크","depth":3},{"value":"Practice","url":"#practice","depth":3},{"value":"간단한 방문자 체크","url":"#간단한-방문자-체크","depth":3},{"value":"Array 방문자 체크","url":"#array-방문자-체크","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"DFS (2) Visitor Check (Study/Data Structure)","datePublished":"2022-10-06T00:00:00.000Z","dateModified":"2022-10-06T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/dfs-visitor-check-team-study"}},{"title":"DFS (1) (Study/Data Structure)","date":"2022-10-03T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"2 min read","minutes":1.415,"time":84900,"words":283},"slug":"dfs-team-study","path":"blog/dfs-team-study","filePath":"blog/dfs-team-study.mdx","toc":[{"value":"[#Team Study] DFS (1)","url":"#team-study-dfs-1","depth":1},{"value":"Practice","url":"#practice","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"DFS (1) (Study/Data Structure)","datePublished":"2022-10-03T00:00:00.000Z","dateModified":"2022-10-03T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/dfs-team-study"}},{"title":"Queue (Study/Data Structure)","date":"2022-10-03T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"2 min read","minutes":1.435,"time":86100,"words":287},"slug":"queue-team-study","path":"blog/queue-team-study","filePath":"blog/queue-team-study.mdx","toc":[{"value":"[#Team Study] Queue","url":"#team-study-queue","depth":1},{"value":"구성요소","url":"#구성요소","depth":3},{"value":"특징","url":"#특징","depth":3},{"value":"[Code] HEAD를 비워두지 않고 구현하는 Queue 방식","url":"#code-head를-비워두지-않고-구현하는-queue-방식","depth":3},{"value":"**Ref","url":"#ref","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Queue (Study/Data Structure)","datePublished":"2022-10-03T00:00:00.000Z","dateModified":"2022-10-03T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/queue-team-study"}},{"title":"Permutation and Swap (Study/Data Structure)","date":"2022-09-16T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"3 min read","minutes":2.52,"time":151200,"words":504},"slug":"permutation-and-swap-team-study","path":"blog/permutation-and-swap-team-study","filePath":"blog/permutation-and-swap-team-study.mdx","toc":[{"value":"[#Team Study] Permutation and Swap","url":"#team-study-permutation-and-swap","depth":1},{"value":"재귀 함수 (CODE 01 참고)","url":"#재귀-함수-code-01-참고","depth":3},{"value":"참조타입 & 원시타입 (CODE 02 , 03 참고)","url":"#참조타입--원시타입-code-02--03-참고","depth":3},{"value":"순열","url":"#순열","depth":2},{"value":"조합","url":"#조합","depth":2},{"value":"순열 구현 (CODE 04 참고)","url":"#순열-구현-code-04-참고","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Permutation and Swap (Study/Data Structure)","datePublished":"2022-09-16T00:00:00.000Z","dateModified":"2022-09-16T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/permutation-and-swap-team-study"}},{"title":"OT ~ Array (Study/Data Structure)","date":"2022-08-18T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.68,"time":280800,"words":936},"slug":"array-team-study","path":"blog/array-team-study","filePath":"blog/array-team-study.mdx","toc":[{"value":"[스터디/자료구조] 1. OT ~ 배열","url":"#스터디자료구조-1-ot--배열","depth":1},{"value":"1. 자료구조","url":"#1-자료구조","depth":2},{"value":"자료구조란?","url":"#자료구조란","depth":3},{"value":"그래서 왜 사용함?","url":"#그래서-왜-사용함","depth":3},{"value":"2. 알고리즘","url":"#2-알고리즘","depth":2},{"value":"3. 메모리와 속도","url":"#3-메모리와-속도","depth":2},{"value":"4. 공부하게 될 대략적인 흐름","url":"#4-공부하게-될-대략적인-흐름","depth":2},{"value":"자료구조","url":"#자료구조","depth":2},{"value":"알고리즘","url":"#알고리즘","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"OT ~ Array (Study/Data Structure)","datePublished":"2022-08-18T00:00:00.000Z","dateModified":"2022-08-18T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/array-team-study"}},{"title":"Stack (Study/Data Structure)","date":"2022-08-18T00:00:00.000Z","tags":["Study","Algorithm","Data Structure"],"draft":false,"type":"Blog","readingTime":{"text":"3 min read","minutes":2.675,"time":160500,"words":535},"slug":"stack-team-study","path":"blog/stack-team-study","filePath":"blog/stack-team-study.mdx","toc":[{"value":"[Study/DataStructure] 2. Stack","url":"#studydatastructure-2-stack","depth":1},{"value":"Stack","url":"#stack","depth":2},{"value":"[Solutions Ref] Practice","url":"#solutions-ref-practice","depth":3}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Stack (Study/Data Structure)","datePublished":"2022-08-18T00:00:00.000Z","dateModified":"2022-08-18T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/stack-team-study"}},{"title":"React 기반 Headless-Wordpress 구축(feat. WSL)","date":"2022-08-01T00:00:00.000Z","tags":["FE","Side Project","React"],"draft":false,"type":"Blog","readingTime":{"text":"7 min read","minutes":6.495,"time":389700,"words":1299},"slug":"headless-wordpress-react","path":"blog/headless-wordpress-react","filePath":"blog/headless-wordpress-react.mdx","toc":[{"value":"React 기반 Headless-Wordpress 구축(feat. WSL)","url":"#react-기반-headless-wordpress-구축feat-wsl","depth":1},{"value":"1. 목적","url":"#1-목적","depth":2},{"value":"2. WSL 개발 환경 구성","url":"#2-wsl-개발-환경-구성","depth":2},{"value":"3. 프로젝트 생성 및 기동","url":"#3-프로젝트-생성-및-기동","depth":2},{"value":"4. GraphQL 및 Git 연동","url":"#4-graphql-및-git-연동","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"React 기반 Headless-Wordpress 구축(feat. WSL)","datePublished":"2022-08-01T00:00:00.000Z","dateModified":"2022-08-01T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/headless-wordpress-react"}},{"title":"Scope와 Hoisting, Closure","date":"2022-08-01T00:00:00.000Z","tags":["Javascript","FE","ES6"],"draft":false,"type":"Blog","readingTime":{"text":"14 min read","minutes":13.605,"time":816300,"words":2721},"slug":"vanila-js-scop-hoisting","path":"blog/vanila-js-scop-hoisting","filePath":"blog/vanila-js-scop-hoisting.mdx","toc":[{"value":"[#Javascript] Scope와 Hoisting, Closure","url":"#javascript-scope와-hoisting-closure","depth":1},{"value":"1. 시작","url":"#1-시작","depth":2},{"value":"2. Scope","url":"#2-scope","depth":2},{"value":"3. Hoisting","url":"#3-hoisting","depth":2},{"value":"4. Closure","url":"#4-closure","depth":2},{"value":"5. 결론","url":"#5-결론","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Scope와 Hoisting, Closure","datePublished":"2022-08-01T00:00:00.000Z","dateModified":"2022-08-01T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/vanila-js-scop-hoisting"}},{"title":"Prototype","date":"2022-08-01T00:00:00.000Z","tags":["Javascript","FE","ES6"],"draft":false,"type":"Blog","readingTime":{"text":"16 min read","minutes":15.4,"time":924000,"words":3080},"slug":"vanila-js","path":"blog/vanila-js","filePath":"blog/vanila-js.mdx","toc":[{"value":"[#Javascript] Prototype","url":"#javascript-prototype","depth":1},{"value":"목록","url":"#목록","depth":2},{"value":"1. Prototype in Javascript","url":"#1-prototype-in-javascript","depth":2},{"value":"2. 목적","url":"#2-목적","depth":2},{"value":"3. 사용","url":"#3-사용","depth":2},{"value":"4. Prototype 내장 메소드","url":"#4-prototype-내장-메소드","depth":2},{"value":"5. Object 메소드","url":"#5-object-메소드","depth":2},{"value":"6. 정리","url":"#6-정리","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Prototype","datePublished":"2022-08-01T00:00:00.000Z","dateModified":"2022-08-01T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/vanila-js"}},{"title":"Summary of Git-Flow used in Git","date":"2022-07-31T00:00:00.000Z","tags":["Git","English"],"draft":false,"summary":"In this post, I wanna explain concepts and necessity of Git Flow, the functional terminology you should be familiar with before working on it, and the overall flow of the process.","type":"Blog","readingTime":{"text":"6 min read","minutes":5.615,"time":336900,"words":1123},"slug":"git-flow-en","path":"blog/git-flow-en","filePath":"blog/git-flow-en.mdx","toc":[{"value":"[#GIT] Summary of Git Flow","url":"#git-summary-of-git-flow","depth":1},{"value":"Contents","url":"#contents","depth":2},{"value":"1.Git Flow","url":"#1git-flow","depth":2},{"value":"2. What made me consider Git Flow","url":"#2-what-made-me-consider-git-flow","depth":2},{"value":"3. Preparation in advance","url":"#3-preparation-in-advance","depth":2},{"value":"4. Branch","url":"#4-branch","depth":2},{"value":"① Life cycle of branch","url":"#-life-cycle-of-branch","depth":3},{"value":"② Naming convention of branch","url":"#-naming-convention-of-branch","depth":3},{"value":"③ Command to be executed during branch work","url":"#-command-to-be-executed-during-branch-work","depth":3},{"value":"5. Merge","url":"#5-merge","depth":2},{"value":"① Merge direction","url":"#-merge-direction","depth":3},{"value":"② How to reduct Conflicts","url":"#-how-to-reduct-conflicts","depth":3},{"value":"③ How to cope with Conflict situations","url":"#-how-to-cope-with-conflict-situations","depth":3},{"value":"6. Pull","url":"#6-pull","depth":2},{"value":"7. Pull Request","url":"#7-pull-request","depth":2},{"value":"8. Organize","url":"#8-organize","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Summary of Git-Flow used in Git","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","description":"In this post, I wanna explain concepts and necessity of Git Flow, the functional terminology you should be familiar with before working on it, and the overall flow of the process.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/git-flow-en"}},{"title":"Gitで用いるGit-Flowまとめ","date":"2022-07-31T00:00:00.000Z","tags":["Git","Japanese"],"draft":false,"summary":"このポストでは、Git Flowの概念と必要性、作業にとって理解が必要な機能の用語と全体的な進行の流れについて説明します。","type":"Blog","readingTime":{"text":"10 min read","minutes":9.255,"time":555300,"words":1851},"slug":"git-flow-jp","path":"blog/git-flow-jp","filePath":"blog/git-flow-jp.mdx","toc":[{"value":"[Git] Gitで用いるGit-Flowまとめ","url":"#git-gitで用いるgit-flowまとめ","depth":1},{"value":"目標","url":"#目標","depth":2},{"value":"目次","url":"#目次","depth":2},{"value":"1. Gitフロー","url":"#1-gitフロー","depth":2},{"value":"2. Git Flowを考慮したきっかけ","url":"#2-git-flowを考慮したきっかけ","depth":2},{"value":"3.事前準備","url":"#3事前準備","depth":2},{"value":"4.ブランチ","url":"#4ブランチ","depth":2},{"value":"①Branchのライフサイクル","url":"#branchのライフサイクル","depth":3},{"value":"②Branchの命名規則Naming Convention","url":"#branchの命名規則naming-convention","depth":3},{"value":"③Branch作業に必要なコマンド","url":"#branch作業に必要なコマンド","depth":3},{"value":"5.Merge","url":"#5merge","depth":2},{"value":"①Branchマージmerge時、マージの方向","url":"#branchマージmerge時マージの方向","depth":3},{"value":"②Conflict減らし方","url":"#conflict減らし方","depth":3},{"value":"③Conflictが出た状況の対策","url":"#conflictが出た状況の対策","depth":3},{"value":"6.Pull","url":"#6pull","depth":2},{"value":"7.Pull Request","url":"#7pull-request","depth":2},{"value":"8.まとめ","url":"#8まとめ","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Gitで用いるGit-Flowまとめ","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","description":"このポストでは、Git Flowの概念と必要性、作業にとって理解が必要な機能の用語と全体的な進行の流れについて説明します。","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/git-flow-jp"}},{"title":"Git Flow 작업 흐름 정리","date":"2022-07-31T00:00:00.000Z","tags":["Git"],"draft":false,"summary":"이 포스트에서는 Git Flow의 개념과 필요성, 작업에 앞서 숙지해야 하는 기능 용어 및 전체적인 진행 흐름에 대해서 설명합니다.","type":"Blog","readingTime":{"text":"11 min read","minutes":10.46,"time":627600,"words":2092},"slug":"git-flow-kr","path":"blog/git-flow-kr","filePath":"blog/git-flow-kr.mdx","toc":[{"value":"[Git] Git Flow 작업 흐름 정리","url":"#git-git-flow-작업-흐름-정리","depth":1},{"value":"목차","url":"#목차","depth":2},{"value":"1. Git Flow","url":"#1-git-flow","depth":2},{"value":"2. Git Flow를 고려하게 된 계기","url":"#2-git-flow를-고려하게-된-계기","depth":2},{"value":"3. 사전 준비","url":"#3-사전-준비","depth":2},{"value":"4. Branch","url":"#4-branch","depth":2},{"value":"①Branch의 수명주기","url":"#branch의-수명주기","depth":3},{"value":"②Branch의 명명규칙Naming Convention","url":"#branch의-명명규칙naming-convention","depth":3},{"value":"③Branch 작업 시 수행하는 명령어","url":"#branch-작업-시-수행하는-명령어","depth":3},{"value":"5. Merge","url":"#5-merge","depth":2},{"value":"①Branch 병합merge 시, 병합방향","url":"#branch-병합merge-시-병합방향","depth":3},{"value":"②Conflict 줄이기","url":"#conflict-줄이기","depth":3},{"value":"③Conflict가 났을 때의 상황 대처","url":"#conflict가-났을-때의-상황-대처","depth":3},{"value":"6. Pull","url":"#6-pull","depth":2},{"value":"7. Pull Request","url":"#7-pull-request","depth":2},{"value":"8. 정리","url":"#8-정리","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Git Flow 작업 흐름 정리","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","description":"이 포스트에서는 Git Flow의 개념과 필요성, 작업에 앞서 숙지해야 하는 기능 용어 및 전체적인 진행 흐름에 대해서 설명합니다.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/git-flow-kr"}},{"title":"Const、Let、Varの違い","date":"2022-07-31T00:00:00.000Z","tags":["Javascript","FE","ES6","Japanese"],"draft":false,"type":"Blog","readingTime":{"text":"6 min read","minutes":5.105,"time":306300,"words":1021},"slug":"javascript-const-let-var-jp","path":"blog/javascript-const-let-var-jp","filePath":"blog/javascript-const-let-var-jp.mdx","toc":[{"value":"[Javascript] Const、Let、Varの違い","url":"#javascript-constletvarの違い","depth":1},{"value":"目次","url":"#目次","depth":2},{"value":"1.Javascriptの変数","url":"#1javascriptの変数","depth":2},{"value":"2. Constについて","url":"#2-constについて","depth":2},{"value":"3. Letについて","url":"#3-letについて","depth":2},{"value":"4. Varについて","url":"#4-varについて","depth":2},{"value":"5.まとめ","url":"#5まとめ","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Const、Let、Varの違い","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/javascript-const-let-var-jp"}},{"title":"Const, Let, Var의 차이점","date":"2022-07-31T00:00:00.000Z","tags":["Javascript","FE","ES6"],"draft":false,"type":"Blog","readingTime":{"text":"5 min read","minutes":4.835,"time":290100,"words":967},"slug":"javascript-const-let-var","path":"blog/javascript-const-let-var","filePath":"blog/javascript-const-let-var.mdx","toc":[{"value":"[#Javascript] Const, Let, Var의 차이점","url":"#javascript-const-let-var의-차이점","depth":1},{"value":"목록","url":"#목록","depth":2},{"value":"1. Javascript의 변수","url":"#1-javascript의-변수","depth":2},{"value":"2. Const에 대해서","url":"#2-const에-대해서","depth":2},{"value":"3. Let에 대해서","url":"#3-let에-대해서","depth":2},{"value":"4. Var에 대해서","url":"#4-var에-대해서","depth":2},{"value":"5. 정리","url":"#5-정리","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Const, Let, Var의 차이점","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/javascript-const-let-var"}},{"title":"Django Web 구축부터 릴리즈까지 (1)","date":"2022-07-31T00:00:00.000Z","tags":["Python","Django","Web"],"draft":false,"type":"Blog","readingTime":{"text":"11 min read","minutes":10.635,"time":638100,"words":2127},"slug":"python-djagno-web","path":"blog/python-djagno-web","filePath":"blog/python-djagno-web.mdx","toc":[{"value":"[Python] Django Web 구축부터 릴리즈까지 (1)","url":"#python-django-web-구축부터-릴리즈까지-1","depth":1},{"value":"목표","url":"#목표","depth":2},{"value":"목차","url":"#목차","depth":2},{"value":"1.Python으로 Web 구축을 고려한 이유","url":"#1python으로-web-구축을-고려한-이유","depth":2},{"value":"2. Python으로 Web 구축 시 갖는 리스크","url":"#2-python으로-web-구축-시-갖는-리스크","depth":2},{"value":"3. Python Web Framework 「Django 」","url":"#3-python-web-framework-django-","depth":2},{"value":"4. Application 구성에 대해서 (Url 관리 등)","url":"#4-application-구성에-대해서-url-관리-등","depth":2},{"value":"5. View & Template","url":"#5-view--template","depth":2},{"value":"6. 정리","url":"#6-정리","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Django Web 구축부터 릴리즈까지 (1)","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/python-djagno-web"}},{"title":"DjangoでのWeb構築からリリースまで（１）","date":"2022-07-31T00:00:00.000Z","tags":["Python","Django","Web","Japanese"],"draft":false,"type":"Blog","readingTime":{"text":"10 min read","minutes":9.515,"time":570900,"words":1903},"slug":"python-django-web-jp","path":"blog/python-django-web-jp","filePath":"blog/python-django-web-jp.mdx","toc":[{"value":"[Python] DjangoでのWeb構築からリリースまで（１）","url":"#python-djangoでのweb構築からリリースまで１","depth":1},{"value":"目標","url":"#目標","depth":2},{"value":"目次","url":"#目次","depth":2},{"value":"1. PythonでのWeb構築を考慮した理由","url":"#1-pythonでのweb構築を考慮した理由","depth":2},{"value":"2. PythonでWebを構築する際持つリスク","url":"#2-pythonでwebを構築する際持つリスク","depth":2},{"value":"3. Python Web Framework 「Django」","url":"#3-python-web-framework-django","depth":2},{"value":"4. Application構成について(Url管理等)","url":"#4-application構成についてurl管理等","depth":2},{"value":"5.View&Template","url":"#5viewtemplate","depth":2},{"value":"6.まとめ","url":"#6まとめ","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"DjangoでのWeb構築からリリースまで（１）","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/python-django-web-jp"}},{"title":"SPAウェブフロントエンド開発ためのまとめ","date":"2022-07-31T00:00:00.000Z","tags":["Javascript","FE","Vue","Japanese"],"draft":false,"type":"Blog","readingTime":{"text":"19 min read","minutes":18.58,"time":1114800,"words":3716},"slug":"vue-spa-dev-jp","path":"blog/vue-spa-dev-jp","filePath":"blog/vue-spa-dev-jp.mdx","toc":[{"value":"[VUE]SPAウェブフロントエンド開発ためのまとめ","url":"#vuespaウェブフロントエンド開発ためのまとめ","depth":1},{"value":"目標","url":"#目標","depth":2},{"value":"目次","url":"#目次","depth":2},{"value":"1. JavaScript Frameworkの使用背景","url":"#1-javascript-frameworkの使用背景","depth":2},{"value":"2. MPAからSPAまで","url":"#2-mpaからspaまで","depth":2},{"value":"3. SPAルーティングに対して","url":"#3-spaルーティングに対して","depth":2},{"value":"①リンク方式(伝統的方式)","url":"#リンク方式伝統的方式","depth":3},{"value":"②AJAX方式","url":"#ajax方式","depth":3},{"value":"③HASH方式","url":"#hash方式","depth":3},{"value":"4.Javascript Frameworkからの主な活用点","url":"#4javascript-frameworkからの主な活用点","depth":2},{"value":"5.VUE","url":"#5vue","depth":2},{"value":"6.主要ライブラリ","url":"#6主要ライブラリ","depth":2},{"value":"①VUE Router","url":"#vue-router","depth":3},{"value":"②VUE CLICommand Line Interface","url":"#vue-clicommand-line-interface","depth":3},{"value":"③Vuex","url":"#vuex","depth":3},{"value":"7.まとめ","url":"#7まとめ","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"SPAウェブフロントエンド開発ためのまとめ","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/vue-spa-dev-jp"}},{"title":"SPA 웹 프론트앤드 개발을 위한 정리","date":"2022-07-31T00:00:00.000Z","tags":["Javascript","FE","Vue"],"draft":false,"type":"Blog","readingTime":{"text":"21 min read","minutes":20.77,"time":1246200,"words":4154},"slug":"vue-spa-dev","path":"blog/vue-spa-dev","filePath":"blog/vue-spa-dev.mdx","toc":[{"value":"[#VUE] SPA 웹 프론트앤드 개발을 위한 정리","url":"#vue-spa-웹-프론트앤드-개발을-위한-정리","depth":1},{"value":"목표","url":"#목표","depth":2},{"value":"목차","url":"#목차","depth":2},{"value":"1. JavaScript Framework의 사용 배경","url":"#1-javascript-framework의-사용-배경","depth":2},{"value":"2. MPA 개발에서 SPA 개발까지","url":"#2-mpa-개발에서-spa-개발까지","depth":2},{"value":"3. SPA 라우팅에 대한 이해","url":"#3-spa-라우팅에-대한-이해","depth":2},{"value":"① 링크 방식(전통적 방식)","url":"#-링크-방식전통적-방식","depth":3},{"value":"② AJAX 방식","url":"#-ajax-방식","depth":3},{"value":"③ HASH 방식","url":"#-hash-방식","depth":3},{"value":"4. Javascript Framework의 주 활용 요소","url":"#4-javascript-framework의-주-활용-요소","depth":2},{"value":"5. VUE","url":"#5-vue","depth":2},{"value":"6. 주요 라이브러리","url":"#6-주요-라이브러리","depth":2},{"value":"① VUE Router","url":"#-vue-router","depth":3},{"value":"②VUE CLI Command Line Interface","url":"#vue-cli-command-line-interface","depth":3},{"value":"③Vuex","url":"#vuex","depth":3},{"value":"7. 정리","url":"#7-정리","depth":2}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"SPA 웹 프론트앤드 개발을 위한 정리","datePublished":"2022-07-31T00:00:00.000Z","dateModified":"2022-07-31T00:00:00.000Z","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/vue-spa-dev"}},{"title":"Images in Next.js","date":"2020-11-11T00:00:00.000Z","tags":["next js","guide"],"draft":false,"summary":"In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component.","authors":["sparrowhawk"],"type":"Blog","readingTime":{"text":"2 min read","minutes":1.95,"time":117000,"words":390},"slug":"guide-to-using-images-in-nextjs","path":"blog/guide-to-using-images-in-nextjs","filePath":"blog/guide-to-using-images-in-nextjs.mdx","toc":[{"value":"Introduction","url":"#introduction","depth":1},{"value":"Usage","url":"#usage","depth":1},{"value":"Benefits","url":"#benefits","depth":1},{"value":"Limitations","url":"#limitations","depth":1}],"structuredData":{"@context":"https://schema.org","@type":"BlogPosting","headline":"Images in Next.js","datePublished":"2020-11-11T00:00:00.000Z","dateModified":"2020-11-11T00:00:00.000Z","description":"In this article we introduce adding images in the tailwind starter blog and the benefits and limitations of the next/image component.","image":"/static/images/twitter-card.png","url":"https://tailwind-nextjs-starter-blog.vercel.app/blog/guide-to-using-images-in-nextjs"}}]